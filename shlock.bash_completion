# bash completion for shlock                               -*- shell-script -*-

_shlock()
{
  local cur prev words cword split
  _init_completion -s || return

  # Check if we've encountered the -- separator
  local i dashdash_pos=0
  for ((i=1; i < cword; i++)); do
    if [[ "${words[i]}" == "--" ]]; then
      dashdash_pos=$i
      break
    fi
  done

  # After --, complete commands and files
  if ((dashdash_pos > 0 && cword > dashdash_pos)); then
    if ((cword == dashdash_pos + 1)); then
      # First word after -- - complete commands
      compopt -o bashdefault -o default
      COMPREPLY=( $(compgen -c -- "$cur") )
    else
      # Subsequent words - complete files
      _filedir
    fi
    return 0
  fi

  # Handle option arguments before --
  case $prev in
    -m|--max-age)
      # Suggest numeric value with hint
      if [[ -z "$cur" ]]; then
        COMPREPLY=( "hours" )
      else
        COMPREPLY=( $(compgen -W "{1..48}" -- "$cur") )
      fi
      return 0
      ;;
    -t|--timeout)
      # Suggest numeric value with hint
      if [[ -z "$cur" ]]; then
        COMPREPLY=( "seconds" )
      else
        COMPREPLY=( $(compgen -W "{1..3600}" -- "$cur") )
      fi
      return 0
      ;;
    -h|--help|-V|--version)
      # No completion after these options
      return 0
      ;;
  esac

  # Handle options
  case $cur in
    -*)
      local opts="-m --max-age -w --wait -t --timeout -h --help -V --version"
      COMPREPLY=( $(compgen -W "$opts" -- "$cur") )
      [[ ${COMPREPLY-} == *= ]] && compopt -o nospace
      return 0
      ;;
  esac

  # Before --, complete with existing lock names from lock directories or --
  if ((dashdash_pos == 0)); then
    local locks=()

    # Get existing lock names - check multiple directories
    local lock_dir
    for lock_dir in /run/lock /var/lock /tmp/locks; do
      [[ -d "$lock_dir" ]] || continue
      local lockfile
      shopt -s nullglob
      for lockfile in "$lock_dir"/*.lock; do
        [[ -f "$lockfile" ]] || continue
        local lockname="${lockfile##*/}"
        lockname="${lockname%.lock}"
        # Avoid duplicates from different directories
        local existing
        local -i found=0
        for existing in "${locks[@]}"; do
          if [[ "$existing" == "$lockname" ]]; then
            found=1
            break
          fi
        done
        ((found)) || locks+=("$lockname")
      done
      shopt -u nullglob
    done

    # Add -- separator as an option
    locks+=("--")

    # If there's partial input, filter; otherwise show all
    if [[ -n "$cur" ]]; then
      COMPREPLY=( $(compgen -W "${locks[*]}" -- "$cur") )
    else
      # Show hint that this is for lockname
      COMPREPLY=( "${locks[@]}" )
    fi

    return 0
  fi

  return 0
}

complete -F _shlock shlock
